import logging
import time

from pyrogram import filters
from pyrogram.errors.exceptions.bad_request_400 import (
    ChatAdminRequired,
    PeerIdInvalid,
    UsernameNotOccupied,
    UserNotParticipant,
)
from pyrogram.types import ChatPermissions, InlineKeyboardButton, InlineKeyboardMarkup

from normbot import DRAGONS as SUDO_USERS
from normbot import pbot
from normbot.utils.sql import forceSubscribe_sql as sql

logging.basicConfig(level=logging.INFO)

static_data_filter = filters.create(
    lambda _, __, query: query.data == "onUnMuteRequest"
)


@pbot.on_callback_query(static_data_filter)
def _onUnMuteRequest(client, cb):
    user_id = cb.from_user.id
    chat_id = cb.message.chat.id
    chat_db = sql.fs_settings(chat_id)
    if chat_db:
        channel = chat_db.channel
        chat_member = client.get_chat_member(chat_id, user_id)
        if chat_member.restricted_by:
            if chat_member.restricted_by.id == (client.get_me()).id:
                try:
                    client.get_chat_member(channel, user_id)
                    client.unban_chat_member(chat_id, user_id)
                    cb.message.delete()
                    # if cb.message.reply_to_message.from_user.id == user_id:
                    # cb.message.delete()
                except UserNotParticipant:
                    client.answer_callback_query(
                        cb.id,
                        text=f" ‡∂Ö‡∂¥‡∑ö @{channel} ‡∂ë‡∂ö‡∂ß ‡∂î‡∂∫‡∑è Join ‡∑Ä‡∑ô‡∂Ω‡∑è ‡∂±‡∑ê‡∂≠‡∑í ‡∂±‡∑í‡∑É‡∑è ‡∂î‡∂∫‡∑è‡∂ß message ‡∂Ø‡∑è‡∂±‡∑ä‡∂± ‡∂∂‡∑ë ‚ùó ‡∂í ‡∂±‡∑í‡∑É‡∑è ‡∂¥‡∑Ñ‡∂Ω‡∑í‡∂±‡∑ä join ‡∑Ä‡∑ô‡∂Ω‡∑è 'Unmute ‡∂ö‡∂ª‡∂±‡∑ä‡∂±' ‡∂ö‡∑í‡∂∫‡∂± ‡∂ë‡∂ö ‡∂î‡∂∂‡∂±‡∑ä‡∂±.",
                        show_alert=True,
                    )
            else:
                client.answer_callback_query(
                    cb.id,
                    text="Admin ‡∂Ω‡∑è ‡∑Ä‡∑í‡∑É‡∑í‡∂±‡∑ä ‡∑Ñ‡∑ö‡∂≠‡∑î ‡∂ö‡∑í‡∑Ñ‡∑í‡∂¥‡∂∫‡∂ö‡∑ä ‡∂±‡∑í‡∑É‡∑è ‡∂î‡∂∫‡∑è‡∑Ä mute ‡∂ö‡∂ª‡∂Ω‡∑è.",
                    show_alert=True,
                )
        else:
            if (
                not client.get_chat_member(chat_id, (client.get_me()).id).status
                == "administrator"
            ):
                client.send_message(
                    chat_id,
                    f" **{cb.from_user.mention} ‡∑Ñ‡∂Ø‡∂±‡∑Ä‡∑è ‡∂ë‡∂∫‡∑è‡∑Ä ‡∂∏ mute ‡∂ö‡∂ª ‡∂ú‡∂±‡∑ä‡∂±. ‡∂í‡∂≠‡∑ä ‡∂∏‡∂∏ admin ‡∂ö‡∑ô‡∂±‡∑ô‡∂ö‡∑ä ‡∂±‡∑ô‡∂∏‡∑ö, ‡∂í ‡∂±‡∑í‡∑É‡∑è ‡∂∏‡∂ß ‡∂í‡∂ö ‡∂ö‡∂ª‡∂±‡∑ä‡∂± ‡∂∂‡∑ë. üò¢ ",
                )

            else:
                client.answer_callback_query(
                    cb.id,
                    text=" ‡∂î‡∂∫‡∑è mute ‡∑Ä‡∑ô‡∂Ω‡∑è ‡∂±‡∑ë üòÇ ‡∂∏‡∑ö‡∂ö ‡∂î‡∂∂‡∂±‡∑ä‡∂± ‡∂ë‡∂¥‡∑è.",
                    show_alert=True,
                )


@pbot.on_message(filters.text & ~filters.private & ~filters.edited, group=1)
def _check_member(client, message):
    chat_id = message.chat.id
    chat_db = sql.fs_settings(chat_id)
    if chat_db:
        user_id = message.from_user.id
        if (
            not client.get_chat_member(chat_id, user_id).status
            in ("administrator", "creator")
            and not user_id in SUDO_USERS
        ):
            channel = chat_db.channel
            try:
                client.get_chat_member(channel, user_id)
            except UserNotParticipant:
                try:
                    sent_message = message.reply_text(
                        "‡∂Ö‡∂∫‡∑í‡∂∫‡∑ù {} üôè \n ‡∂î‡∂∫‡∑è ‡∂Ö‡∂¥‡∑ö ‡∂ë‡∂ö‡∂ß ‡∑Ä‡∑ô‡∂Ω‡∑è ‡∂±‡∑ë. üò≠ \n ‡∂í ‡∂±‡∑í‡∑É‡∑è [‡∂Ö‡∂¥‡∑ö Channel](https://t.me/{}) ‡∂ë‡∂ö‡∂ß join ‡∑Ä‡∑ô‡∂Ω‡∑è '‡∂∏‡∑è‡∑Ä Unmute ‡∂ö‡∂ª‡∂±‡∑ä‡∂±' ‡∂ö‡∑í‡∂∫‡∂± ‡∂ë‡∂ö ‡∂î‡∂∂‡∂±‡∑ä‡∂±. \n \n ".format(
                            message.from_user.mention, channel, channel
                        ),
                        disable_web_page_preview=True,
                        reply_markup=InlineKeyboardMarkup(
                            [
                                [
                                    InlineKeyboardButton(
                                        "‡∂Ö‡∂¥‡∑ö Channel ‡∂ë‡∂ö‡∂ß join ‡∑Ä‡∑ô‡∂±‡∑ä‡∂±.",
                                        url="https://t.me/{}".format(channel),
                                    )
                                ],
                                [
                                    InlineKeyboardButton(
                                        "‡∂∏‡∑è‡∑Ä Unmute ‡∂ö‡∂ª‡∂±‡∑ä‡∂±", callback_data="onUnMuteRequest"
                                    )
                                ],
                            ]
                        ),
                    )
                    client.restrict_chat_member(
                        chat_id, user_id, ChatPermissions(can_send_messages=False)
                    )
                except ChatAdminRequired:
                    sent_message.edit(
                        "‡∂∏‡∂∏ admin ‡∂ö‡∑ô‡∂±‡∑ô‡∂ö‡∑ä ‡∂±‡∑ô‡∂∏‡∑ö, ‡∂í ‡∂±‡∑í‡∑É‡∑è ‡∂∏‡∂ß ‡∂∏‡∑ö‡∂ö ‡∂ö‡∂ª‡∂±‡∑ä‡∂± ‡∂∂‡∑ë, ‡∂∏‡∑è‡∑Ä admin ‡∂ö‡∑ô‡∂±‡∑ô‡∂ö‡∑ä ‡∂ö‡∂ª‡∂Ω‡∑è ‡∂±‡∑ê‡∑Ä‡∂≠ ‡∂ã‡∂≠‡∑ä‡∑É‡∑è‡∑Ñ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±."
                    )

            except ChatAdminRequired:
                client.send_message(
                    chat_id,
                    text=f" @{channel} ‡∑Ä‡∂Ω ‡∂∏‡∂∏ admin ‡∂ö‡∑ô‡∂±‡∑ô‡∂ö‡∑ä ‡∂±‡∑ô‡∂∏‡∑ö\n‡∂∏‡∑è‡∑Ä admin ‡∂ö‡∑ô‡∂±‡∑ô‡∂ö‡∑ä ‡∂ö‡∂ª‡∂Ω‡∑è ‡∂±‡∑ê‡∑Ä‡∂≠ ‡∂ã‡∂≠‡∑ä‡∑É‡∑è‡∑Ñ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±",
                )


@pbot.on_message(filters.command(["forcesubscribe", "fsub"]) & ~filters.private)
def config(client, message):
    user = client.get_chat_member(message.chat.id, message.from_user.id)
    if user.status is "creator" or user.user.id in SUDO_USERS:
        chat_id = message.chat.id
        if len(message.command) > 1:
            input_str = message.command[1]
            input_str = input_str.replace("@", "")
            if input_str.lower() in ("off", "no", "disable"):
                sql.disapprove(chat_id)
                message.reply_text("Fsub off ‡∂ö‡∂ª‡∑è.")
            elif input_str.lower() in ("clear"):
                sent_message = message.reply_text(
                    "‡∂∏‡∂∏ mute ‡∂ö‡∂ª‡∂¥‡∑î ‡∂î‡∂ö‡∑ä‡∂ö‡∑ú‡∂∏ unmute ‡∂ö‡∂ª‡∑è."
                )
                try:
                    for chat_member in client.get_chat_members(
                        message.chat.id, filter="restricted"
                    ):
                        if chat_member.restricted_by.id == (client.get_me()).id:
                            client.unban_chat_member(chat_id, chat_member.user.id)
                            time.sleep(1)
                    sent_message.edit("‡∂∏‡∂∏ mute ‡∂ö‡∂ª‡∂¥‡∑î ‡∂î‡∂ö‡∑ä‡∂ö‡∑ú‡∂∏ unmute ‡∂ö‡∂ª‡∑è. ‚úÖ")
                except ChatAdminRequired:
                    sent_message.edit(
                        "‡∂∏‡∂∏ admin ‡∂ö‡∑ô‡∂±‡∑ô‡∂ö‡∑ä ‡∂±‡∑ô‡∂∏‡∑ö, ‡∂í ‡∂±‡∑í‡∑É‡∑è ‡∂∏‡∂ß ‡∂∏‡∑ö‡∂ö ‡∂ö‡∂ª‡∂±‡∑ä‡∂± ‡∂∂‡∑ë, ‡∂∏‡∑è‡∑Ä Users Band ‡∂ö‡∂ª‡∂± Permisson ‡∂ë‡∂ö‡∂≠‡∑ä ‡∂ë‡∂ö‡∑ä‡∂ö admin ‡∂ö‡∑ô‡∂±‡∑ô‡∂ö‡∑ä ‡∂ö‡∂ª‡∂Ω‡∑è ‡∂±‡∑ê‡∑Ä‡∂≠ ‡∂ã‡∂≠‡∑ä‡∑É‡∑è‡∑Ñ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±."
                    )
            else:
                try:
                    client.get_chat_member(input_str, "me")
                    sql.add_channel(chat_id, input_str)
                    message.reply_text(
                        f"Fsub on ‡∂ö‡∂ª‡∑è. ‡∑Ñ‡∑ê‡∂∏‡∑ù‡∂∏ ‡∂Ö‡∂¥‡∑ö [channel](https://t.me/{input_str}) ‡∂ë‡∂ö‡∂ß join ‡∑Ä‡∑ô‡∂±‡∑ä‡∂±. ‚úÖ",
                        disable_web_page_preview=True,
                    )
                except UserNotParticipant:
                    message.reply_text(
                        f"[channel](https://t.me/{input_str}) ‡∑Ä‡∂Ω ‡∂∏‡∂∏ admin ‡∂ö‡∑ô‡∂±‡∑ô‡∂ö‡∑ä ‡∂±‡∑ô‡∂∏‡∑ö\n‡∂∏‡∑è‡∑Ä admin ‡∂ö‡∑ô‡∂±‡∑ô‡∂ö‡∑ä ‡∂ö‡∂ª‡∂Ω‡∑è ‡∂±‡∑ê‡∑Ä‡∂≠ ‡∂ã‡∂≠‡∑ä‡∑É‡∑è‡∑Ñ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±",
                        disable_web_page_preview=True,
                    )
                except (UsernameNotOccupied, PeerIdInvalid):
                    message.reply_text(f"Channel ‡∂ë‡∂ö‡∑ö Username ‡∂ë‡∂ö ‡∑Ä‡∑ê‡∂ª‡∂Ø‡∑í‡∂∫‡∑í ‚ùå")
                except Exception as err:
                    message.reply_text(f"‡∂ú‡∑ê‡∂ß‡∂Ω‡∑î‡∑Ä‡∂ö‡∑ä üò≠ ```{err}```")
        else:
            if sql.fs_settings(chat_id):
                message.reply_text(
                    f"‚úÖ **Fsub ‡∂ö‡∂ª‡∑è..**\n__ ‡∂∏‡∑ö [Channel](https://t.me/{sql.fs_settings(chat_id).channel})‡∂ë‡∂ö‡∂ß__",
                    disable_web_page_preview=True,
                )
            else:
                message.reply_text("Fsub off ‡∂ö‡∂ª‡∑è.")
    else:
        message.reply_text(
            "‚ùó **Group Creator Required**\n__You have to be the group creator to do that.__"
        )


__help__ = """

*‡∑Ä‡∑í‡∂∞‡∑è‡∂±*
‚Ä¢ /FSub - ‡∂Ø‡∑ê‡∂ß ‡∂á‡∂≠‡∑í ‡∂≠‡∂≠‡∑ä‡∑Ä‡∂∫ ‡∂Ø‡∑ê‡∂± ‡∂ú‡∂±‡∑ä‡∂±.
‚Ä¢ /FSub no/off/disable - Fsub on,off ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏ ‡∑É‡∂Ø‡∑Ñ‡∑è.
‚Ä¢ /FSub {channel username} - ‡∑Ñ‡∂Ø‡∑è ‡∂ú‡∂±‡∑ä‡∂± ‡∑Ä‡∑í‡∂Ø‡∑í‡∑Ñ
‚Ä¢ /FSub clear - mute ‡∂ö‡∂ª‡∂¥‡∑î ‡∑Ñ‡∑ê‡∂∏‡∑ù‡∂∏ unmute ‡∂ö‡∂ª‡∂±‡∑ä‡∂±. 
"""
__mod_name__ = " Fsub üì¢ "
